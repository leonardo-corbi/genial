
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Ativo` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Ativo
 * 
 */
export type AtivoModel = runtime.Types.Result.DefaultSelection<Prisma.$AtivoPayload>

export type AggregateAtivo = {
  _count: AtivoCountAggregateOutputType | null
  _avg: AtivoAvgAggregateOutputType | null
  _sum: AtivoSumAggregateOutputType | null
  _min: AtivoMinAggregateOutputType | null
  _max: AtivoMaxAggregateOutputType | null
}

export type AtivoAvgAggregateOutputType = {
  valorInvestido: runtime.Decimal | null
}

export type AtivoSumAggregateOutputType = {
  valorInvestido: runtime.Decimal | null
}

export type AtivoMinAggregateOutputType = {
  id: string | null
  nome: string | null
  risco: $Enums.AtivoRisco | null
  valorInvestido: runtime.Decimal | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type AtivoMaxAggregateOutputType = {
  id: string | null
  nome: string | null
  risco: $Enums.AtivoRisco | null
  valorInvestido: runtime.Decimal | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type AtivoCountAggregateOutputType = {
  id: number
  nome: number
  risco: number
  valorInvestido: number
  userId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type AtivoAvgAggregateInputType = {
  valorInvestido?: true
}

export type AtivoSumAggregateInputType = {
  valorInvestido?: true
}

export type AtivoMinAggregateInputType = {
  id?: true
  nome?: true
  risco?: true
  valorInvestido?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type AtivoMaxAggregateInputType = {
  id?: true
  nome?: true
  risco?: true
  valorInvestido?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type AtivoCountAggregateInputType = {
  id?: true
  nome?: true
  risco?: true
  valorInvestido?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type AtivoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Ativo to aggregate.
   */
  where?: Prisma.AtivoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ativos to fetch.
   */
  orderBy?: Prisma.AtivoOrderByWithRelationInput | Prisma.AtivoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AtivoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ativos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ativos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Ativos
  **/
  _count?: true | AtivoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AtivoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AtivoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AtivoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AtivoMaxAggregateInputType
}

export type GetAtivoAggregateType<T extends AtivoAggregateArgs> = {
      [P in keyof T & keyof AggregateAtivo]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAtivo[P]>
    : Prisma.GetScalarType<T[P], AggregateAtivo[P]>
}




export type AtivoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AtivoWhereInput
  orderBy?: Prisma.AtivoOrderByWithAggregationInput | Prisma.AtivoOrderByWithAggregationInput[]
  by: Prisma.AtivoScalarFieldEnum[] | Prisma.AtivoScalarFieldEnum
  having?: Prisma.AtivoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AtivoCountAggregateInputType | true
  _avg?: AtivoAvgAggregateInputType
  _sum?: AtivoSumAggregateInputType
  _min?: AtivoMinAggregateInputType
  _max?: AtivoMaxAggregateInputType
}

export type AtivoGroupByOutputType = {
  id: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal
  userId: string
  createdAt: Date
  updatedAt: Date
  _count: AtivoCountAggregateOutputType | null
  _avg: AtivoAvgAggregateOutputType | null
  _sum: AtivoSumAggregateOutputType | null
  _min: AtivoMinAggregateOutputType | null
  _max: AtivoMaxAggregateOutputType | null
}

type GetAtivoGroupByPayload<T extends AtivoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AtivoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AtivoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AtivoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AtivoGroupByOutputType[P]>
      }
    >
  >



export type AtivoWhereInput = {
  AND?: Prisma.AtivoWhereInput | Prisma.AtivoWhereInput[]
  OR?: Prisma.AtivoWhereInput[]
  NOT?: Prisma.AtivoWhereInput | Prisma.AtivoWhereInput[]
  id?: Prisma.StringFilter<"Ativo"> | string
  nome?: Prisma.StringFilter<"Ativo"> | string
  risco?: Prisma.EnumAtivoRiscoFilter<"Ativo"> | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFilter<"Ativo"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringFilter<"Ativo"> | string
  createdAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type AtivoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  risco?: Prisma.SortOrder
  valorInvestido?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type AtivoWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.AtivoWhereInput | Prisma.AtivoWhereInput[]
  OR?: Prisma.AtivoWhereInput[]
  NOT?: Prisma.AtivoWhereInput | Prisma.AtivoWhereInput[]
  nome?: Prisma.StringFilter<"Ativo"> | string
  risco?: Prisma.EnumAtivoRiscoFilter<"Ativo"> | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFilter<"Ativo"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringFilter<"Ativo"> | string
  createdAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type AtivoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  risco?: Prisma.SortOrder
  valorInvestido?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.AtivoCountOrderByAggregateInput
  _avg?: Prisma.AtivoAvgOrderByAggregateInput
  _max?: Prisma.AtivoMaxOrderByAggregateInput
  _min?: Prisma.AtivoMinOrderByAggregateInput
  _sum?: Prisma.AtivoSumOrderByAggregateInput
}

export type AtivoScalarWhereWithAggregatesInput = {
  AND?: Prisma.AtivoScalarWhereWithAggregatesInput | Prisma.AtivoScalarWhereWithAggregatesInput[]
  OR?: Prisma.AtivoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AtivoScalarWhereWithAggregatesInput | Prisma.AtivoScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Ativo"> | string
  nome?: Prisma.StringWithAggregatesFilter<"Ativo"> | string
  risco?: Prisma.EnumAtivoRiscoWithAggregatesFilter<"Ativo"> | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalWithAggregatesFilter<"Ativo"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringWithAggregatesFilter<"Ativo"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Ativo"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Ativo"> | Date | string
}

export type AtivoCreateInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutAtivosInput
}

export type AtivoUncheckedCreateInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AtivoUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutAtivosNestedInput
}

export type AtivoUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AtivoCreateManyInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AtivoUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AtivoUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AtivoListRelationFilter = {
  every?: Prisma.AtivoWhereInput
  some?: Prisma.AtivoWhereInput
  none?: Prisma.AtivoWhereInput
}

export type AtivoOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AtivoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  risco?: Prisma.SortOrder
  valorInvestido?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AtivoAvgOrderByAggregateInput = {
  valorInvestido?: Prisma.SortOrder
}

export type AtivoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  risco?: Prisma.SortOrder
  valorInvestido?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AtivoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  risco?: Prisma.SortOrder
  valorInvestido?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AtivoSumOrderByAggregateInput = {
  valorInvestido?: Prisma.SortOrder
}

export type AtivoCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput> | Prisma.AtivoCreateWithoutUserInput[] | Prisma.AtivoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.AtivoCreateOrConnectWithoutUserInput | Prisma.AtivoCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.AtivoCreateManyUserInputEnvelope
  connect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
}

export type AtivoUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput> | Prisma.AtivoCreateWithoutUserInput[] | Prisma.AtivoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.AtivoCreateOrConnectWithoutUserInput | Prisma.AtivoCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.AtivoCreateManyUserInputEnvelope
  connect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
}

export type AtivoUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput> | Prisma.AtivoCreateWithoutUserInput[] | Prisma.AtivoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.AtivoCreateOrConnectWithoutUserInput | Prisma.AtivoCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.AtivoUpsertWithWhereUniqueWithoutUserInput | Prisma.AtivoUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.AtivoCreateManyUserInputEnvelope
  set?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  disconnect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  delete?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  connect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  update?: Prisma.AtivoUpdateWithWhereUniqueWithoutUserInput | Prisma.AtivoUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.AtivoUpdateManyWithWhereWithoutUserInput | Prisma.AtivoUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.AtivoScalarWhereInput | Prisma.AtivoScalarWhereInput[]
}

export type AtivoUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput> | Prisma.AtivoCreateWithoutUserInput[] | Prisma.AtivoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.AtivoCreateOrConnectWithoutUserInput | Prisma.AtivoCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.AtivoUpsertWithWhereUniqueWithoutUserInput | Prisma.AtivoUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.AtivoCreateManyUserInputEnvelope
  set?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  disconnect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  delete?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  connect?: Prisma.AtivoWhereUniqueInput | Prisma.AtivoWhereUniqueInput[]
  update?: Prisma.AtivoUpdateWithWhereUniqueWithoutUserInput | Prisma.AtivoUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.AtivoUpdateManyWithWhereWithoutUserInput | Prisma.AtivoUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.AtivoScalarWhereInput | Prisma.AtivoScalarWhereInput[]
}

export type EnumAtivoRiscoFieldUpdateOperationsInput = {
  set?: $Enums.AtivoRisco
}

export type DecimalFieldUpdateOperationsInput = {
  set?: runtime.Decimal | runtime.DecimalJsLike | number | string
  increment?: runtime.Decimal | runtime.DecimalJsLike | number | string
  decrement?: runtime.Decimal | runtime.DecimalJsLike | number | string
  multiply?: runtime.Decimal | runtime.DecimalJsLike | number | string
  divide?: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type AtivoCreateWithoutUserInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AtivoUncheckedCreateWithoutUserInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AtivoCreateOrConnectWithoutUserInput = {
  where: Prisma.AtivoWhereUniqueInput
  create: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput>
}

export type AtivoCreateManyUserInputEnvelope = {
  data: Prisma.AtivoCreateManyUserInput | Prisma.AtivoCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type AtivoUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.AtivoWhereUniqueInput
  update: Prisma.XOR<Prisma.AtivoUpdateWithoutUserInput, Prisma.AtivoUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.AtivoCreateWithoutUserInput, Prisma.AtivoUncheckedCreateWithoutUserInput>
}

export type AtivoUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.AtivoWhereUniqueInput
  data: Prisma.XOR<Prisma.AtivoUpdateWithoutUserInput, Prisma.AtivoUncheckedUpdateWithoutUserInput>
}

export type AtivoUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.AtivoScalarWhereInput
  data: Prisma.XOR<Prisma.AtivoUpdateManyMutationInput, Prisma.AtivoUncheckedUpdateManyWithoutUserInput>
}

export type AtivoScalarWhereInput = {
  AND?: Prisma.AtivoScalarWhereInput | Prisma.AtivoScalarWhereInput[]
  OR?: Prisma.AtivoScalarWhereInput[]
  NOT?: Prisma.AtivoScalarWhereInput | Prisma.AtivoScalarWhereInput[]
  id?: Prisma.StringFilter<"Ativo"> | string
  nome?: Prisma.StringFilter<"Ativo"> | string
  risco?: Prisma.EnumAtivoRiscoFilter<"Ativo"> | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFilter<"Ativo"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  userId?: Prisma.StringFilter<"Ativo"> | string
  createdAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Ativo"> | Date | string
}

export type AtivoCreateManyUserInput = {
  id?: string
  nome: string
  risco: $Enums.AtivoRisco
  valorInvestido: runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AtivoUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AtivoUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AtivoUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  risco?: Prisma.EnumAtivoRiscoFieldUpdateOperationsInput | $Enums.AtivoRisco
  valorInvestido?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type AtivoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  nome?: boolean
  risco?: boolean
  valorInvestido?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ativo"]>

export type AtivoSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  nome?: boolean
  risco?: boolean
  valorInvestido?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ativo"]>

export type AtivoSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  nome?: boolean
  risco?: boolean
  valorInvestido?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ativo"]>

export type AtivoSelectScalar = {
  id?: boolean
  nome?: boolean
  risco?: boolean
  valorInvestido?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type AtivoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "nome" | "risco" | "valorInvestido" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["ativo"]>
export type AtivoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type AtivoIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type AtivoIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $AtivoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Ativo"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    nome: string
    risco: $Enums.AtivoRisco
    valorInvestido: runtime.Decimal
    userId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["ativo"]>
  composites: {}
}

export type AtivoGetPayload<S extends boolean | null | undefined | AtivoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AtivoPayload, S>

export type AtivoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AtivoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AtivoCountAggregateInputType | true
  }

export interface AtivoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ativo'], meta: { name: 'Ativo' } }
  /**
   * Find zero or one Ativo that matches the filter.
   * @param {AtivoFindUniqueArgs} args - Arguments to find a Ativo
   * @example
   * // Get one Ativo
   * const ativo = await prisma.ativo.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AtivoFindUniqueArgs>(args: Prisma.SelectSubset<T, AtivoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Ativo that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AtivoFindUniqueOrThrowArgs} args - Arguments to find a Ativo
   * @example
   * // Get one Ativo
   * const ativo = await prisma.ativo.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AtivoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AtivoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ativo that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoFindFirstArgs} args - Arguments to find a Ativo
   * @example
   * // Get one Ativo
   * const ativo = await prisma.ativo.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AtivoFindFirstArgs>(args?: Prisma.SelectSubset<T, AtivoFindFirstArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ativo that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoFindFirstOrThrowArgs} args - Arguments to find a Ativo
   * @example
   * // Get one Ativo
   * const ativo = await prisma.ativo.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AtivoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AtivoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Ativos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ativos
   * const ativos = await prisma.ativo.findMany()
   * 
   * // Get first 10 Ativos
   * const ativos = await prisma.ativo.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ativoWithIdOnly = await prisma.ativo.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AtivoFindManyArgs>(args?: Prisma.SelectSubset<T, AtivoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Ativo.
   * @param {AtivoCreateArgs} args - Arguments to create a Ativo.
   * @example
   * // Create one Ativo
   * const Ativo = await prisma.ativo.create({
   *   data: {
   *     // ... data to create a Ativo
   *   }
   * })
   * 
   */
  create<T extends AtivoCreateArgs>(args: Prisma.SelectSubset<T, AtivoCreateArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Ativos.
   * @param {AtivoCreateManyArgs} args - Arguments to create many Ativos.
   * @example
   * // Create many Ativos
   * const ativo = await prisma.ativo.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AtivoCreateManyArgs>(args?: Prisma.SelectSubset<T, AtivoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Ativos and returns the data saved in the database.
   * @param {AtivoCreateManyAndReturnArgs} args - Arguments to create many Ativos.
   * @example
   * // Create many Ativos
   * const ativo = await prisma.ativo.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Ativos and only return the `id`
   * const ativoWithIdOnly = await prisma.ativo.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AtivoCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AtivoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Ativo.
   * @param {AtivoDeleteArgs} args - Arguments to delete one Ativo.
   * @example
   * // Delete one Ativo
   * const Ativo = await prisma.ativo.delete({
   *   where: {
   *     // ... filter to delete one Ativo
   *   }
   * })
   * 
   */
  delete<T extends AtivoDeleteArgs>(args: Prisma.SelectSubset<T, AtivoDeleteArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Ativo.
   * @param {AtivoUpdateArgs} args - Arguments to update one Ativo.
   * @example
   * // Update one Ativo
   * const ativo = await prisma.ativo.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AtivoUpdateArgs>(args: Prisma.SelectSubset<T, AtivoUpdateArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Ativos.
   * @param {AtivoDeleteManyArgs} args - Arguments to filter Ativos to delete.
   * @example
   * // Delete a few Ativos
   * const { count } = await prisma.ativo.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AtivoDeleteManyArgs>(args?: Prisma.SelectSubset<T, AtivoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ativos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ativos
   * const ativo = await prisma.ativo.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AtivoUpdateManyArgs>(args: Prisma.SelectSubset<T, AtivoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ativos and returns the data updated in the database.
   * @param {AtivoUpdateManyAndReturnArgs} args - Arguments to update many Ativos.
   * @example
   * // Update many Ativos
   * const ativo = await prisma.ativo.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Ativos and only return the `id`
   * const ativoWithIdOnly = await prisma.ativo.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AtivoUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AtivoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Ativo.
   * @param {AtivoUpsertArgs} args - Arguments to update or create a Ativo.
   * @example
   * // Update or create a Ativo
   * const ativo = await prisma.ativo.upsert({
   *   create: {
   *     // ... data to create a Ativo
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Ativo we want to update
   *   }
   * })
   */
  upsert<T extends AtivoUpsertArgs>(args: Prisma.SelectSubset<T, AtivoUpsertArgs<ExtArgs>>): Prisma.Prisma__AtivoClient<runtime.Types.Result.GetResult<Prisma.$AtivoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Ativos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoCountArgs} args - Arguments to filter Ativos to count.
   * @example
   * // Count the number of Ativos
   * const count = await prisma.ativo.count({
   *   where: {
   *     // ... the filter for the Ativos we want to count
   *   }
   * })
  **/
  count<T extends AtivoCountArgs>(
    args?: Prisma.Subset<T, AtivoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AtivoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Ativo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AtivoAggregateArgs>(args: Prisma.Subset<T, AtivoAggregateArgs>): Prisma.PrismaPromise<GetAtivoAggregateType<T>>

  /**
   * Group by Ativo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AtivoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AtivoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AtivoGroupByArgs['orderBy'] }
      : { orderBy?: AtivoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AtivoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAtivoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Ativo model
 */
readonly fields: AtivoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Ativo.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AtivoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Ativo model
 */
export interface AtivoFieldRefs {
  readonly id: Prisma.FieldRef<"Ativo", 'String'>
  readonly nome: Prisma.FieldRef<"Ativo", 'String'>
  readonly risco: Prisma.FieldRef<"Ativo", 'AtivoRisco'>
  readonly valorInvestido: Prisma.FieldRef<"Ativo", 'Decimal'>
  readonly userId: Prisma.FieldRef<"Ativo", 'String'>
  readonly createdAt: Prisma.FieldRef<"Ativo", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Ativo", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Ativo findUnique
 */
export type AtivoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter, which Ativo to fetch.
   */
  where: Prisma.AtivoWhereUniqueInput
}

/**
 * Ativo findUniqueOrThrow
 */
export type AtivoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter, which Ativo to fetch.
   */
  where: Prisma.AtivoWhereUniqueInput
}

/**
 * Ativo findFirst
 */
export type AtivoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter, which Ativo to fetch.
   */
  where?: Prisma.AtivoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ativos to fetch.
   */
  orderBy?: Prisma.AtivoOrderByWithRelationInput | Prisma.AtivoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Ativos.
   */
  cursor?: Prisma.AtivoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ativos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ativos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Ativos.
   */
  distinct?: Prisma.AtivoScalarFieldEnum | Prisma.AtivoScalarFieldEnum[]
}

/**
 * Ativo findFirstOrThrow
 */
export type AtivoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter, which Ativo to fetch.
   */
  where?: Prisma.AtivoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ativos to fetch.
   */
  orderBy?: Prisma.AtivoOrderByWithRelationInput | Prisma.AtivoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Ativos.
   */
  cursor?: Prisma.AtivoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ativos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ativos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Ativos.
   */
  distinct?: Prisma.AtivoScalarFieldEnum | Prisma.AtivoScalarFieldEnum[]
}

/**
 * Ativo findMany
 */
export type AtivoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter, which Ativos to fetch.
   */
  where?: Prisma.AtivoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ativos to fetch.
   */
  orderBy?: Prisma.AtivoOrderByWithRelationInput | Prisma.AtivoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Ativos.
   */
  cursor?: Prisma.AtivoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ativos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ativos.
   */
  skip?: number
  distinct?: Prisma.AtivoScalarFieldEnum | Prisma.AtivoScalarFieldEnum[]
}

/**
 * Ativo create
 */
export type AtivoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * The data needed to create a Ativo.
   */
  data: Prisma.XOR<Prisma.AtivoCreateInput, Prisma.AtivoUncheckedCreateInput>
}

/**
 * Ativo createMany
 */
export type AtivoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Ativos.
   */
  data: Prisma.AtivoCreateManyInput | Prisma.AtivoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Ativo createManyAndReturn
 */
export type AtivoCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * The data used to create many Ativos.
   */
  data: Prisma.AtivoCreateManyInput | Prisma.AtivoCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Ativo update
 */
export type AtivoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * The data needed to update a Ativo.
   */
  data: Prisma.XOR<Prisma.AtivoUpdateInput, Prisma.AtivoUncheckedUpdateInput>
  /**
   * Choose, which Ativo to update.
   */
  where: Prisma.AtivoWhereUniqueInput
}

/**
 * Ativo updateMany
 */
export type AtivoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Ativos.
   */
  data: Prisma.XOR<Prisma.AtivoUpdateManyMutationInput, Prisma.AtivoUncheckedUpdateManyInput>
  /**
   * Filter which Ativos to update
   */
  where?: Prisma.AtivoWhereInput
  /**
   * Limit how many Ativos to update.
   */
  limit?: number
}

/**
 * Ativo updateManyAndReturn
 */
export type AtivoUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * The data used to update Ativos.
   */
  data: Prisma.XOR<Prisma.AtivoUpdateManyMutationInput, Prisma.AtivoUncheckedUpdateManyInput>
  /**
   * Filter which Ativos to update
   */
  where?: Prisma.AtivoWhereInput
  /**
   * Limit how many Ativos to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Ativo upsert
 */
export type AtivoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * The filter to search for the Ativo to update in case it exists.
   */
  where: Prisma.AtivoWhereUniqueInput
  /**
   * In case the Ativo found by the `where` argument doesn't exist, create a new Ativo with this data.
   */
  create: Prisma.XOR<Prisma.AtivoCreateInput, Prisma.AtivoUncheckedCreateInput>
  /**
   * In case the Ativo was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AtivoUpdateInput, Prisma.AtivoUncheckedUpdateInput>
}

/**
 * Ativo delete
 */
export type AtivoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
  /**
   * Filter which Ativo to delete.
   */
  where: Prisma.AtivoWhereUniqueInput
}

/**
 * Ativo deleteMany
 */
export type AtivoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Ativos to delete
   */
  where?: Prisma.AtivoWhereInput
  /**
   * Limit how many Ativos to delete.
   */
  limit?: number
}

/**
 * Ativo without action
 */
export type AtivoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ativo
   */
  select?: Prisma.AtivoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ativo
   */
  omit?: Prisma.AtivoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AtivoInclude<ExtArgs> | null
}
